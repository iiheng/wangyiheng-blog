import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as n,o as a,f as e}from"./app-vg0GsebR.js";const i={},l=e(`<h1 id="nuxt全栈教程" tabindex="-1"><a class="header-anchor" href="#nuxt全栈教程"><span>nuxt全栈教程</span></a></h1><h3 id="利用mysql安装docker" tabindex="-1"><a class="header-anchor" href="#利用mysql安装docker"><span>利用mysql安装docker</span></a></h3><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span> docker run -d -p 3306:3306 --name mysql -e MYSQL_ROOT_PASSWORD=123456 -v \${PWD}/db:/var/lib/mysql --restart always mysql:8.2</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="mysql-表设计" tabindex="-1"><a class="header-anchor" href="#mysql-表设计"><span>mysql 表设计</span></a></h3><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>-- 创建数据库</span></span>
<span class="line"><span>CREATE DATABASE IF NOT EXISTS advcamsx;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>-- 使用新创建的数据库</span></span>
<span class="line"><span>USE advcamsx;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>-- 创建 Customers 表</span></span>
<span class="line"><span>DROP TABLE IF EXISTS Customers;</span></span>
<span class="line"><span>CREATE TABLE IF NOT EXISTS Customers (</span></span>
<span class="line"><span>    CustomerId INT PRIMARY KEY,</span></span>
<span class="line"><span>    CompanyName VARCHAR(255),</span></span>
<span class="line"><span>    ContactName VARCHAR(255)</span></span>
<span class="line"><span>);</span></span>
<span class="line"><span>INSERT INTO Customers (CustomerID, CompanyName, ContactName) VALUES </span></span>
<span class="line"><span>(1, &#39;Alfreds Futterkiste&#39;, &#39;Maria Anders&#39;),</span></span>
<span class="line"><span>(4, &#39;Around the Horn&#39;, &#39;Thomas Hardy&#39;),</span></span>
<span class="line"><span>(11, &#39;Bs Beverages&#39;, &#39;Victoria Ashworth&#39;),</span></span>
<span class="line"><span>(13, &#39;Bs Beverages&#39;, &#39;Random Name&#39;);</span></span>
<span class="line"><span></span></span>
<span class="line"><span>-- 创建 users 表</span></span>
<span class="line"><span>DROP TABLE IF EXISTS users;</span></span>
<span class="line"><span>CREATE TABLE users (</span></span>
<span class="line"><span>    id INT PRIMARY KEY AUTO_INCREMENT,</span></span>
<span class="line"><span>    username VARCHAR(255) NOT NULL,</span></span>
<span class="line"><span>    phone VARCHAR(20) NOT NULL UNIQUE,</span></span>
<span class="line"><span>    password VARCHAR(255) NOT NULL,</span></span>
<span class="line"><span>    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,</span></span>
<span class="line"><span>    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,</span></span>
<span class="line"><span>    points INT DEFAULT 0</span></span>
<span class="line"><span>);</span></span>
<span class="line"><span></span></span>
<span class="line"><span>-- 创建 activation_codes 表</span></span>
<span class="line"><span>DROP TABLE IF EXISTS activation_codes;</span></span>
<span class="line"><span>CREATE TABLE activation_codes (</span></span>
<span class="line"><span>    id INT PRIMARY KEY AUTO_INCREMENT,</span></span>
<span class="line"><span>    code VARCHAR(255) NOT NULL UNIQUE,</span></span>
<span class="line"><span>    points INT NOT NULL,</span></span>
<span class="line"><span>    is_active BOOLEAN NOT NULL DEFAULT TRUE,</span></span>
<span class="line"><span>    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,</span></span>
<span class="line"><span>    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,</span></span>
<span class="line"><span>    expiration_date DATE NOT NULL</span></span>
<span class="line"><span>);</span></span>
<span class="line"><span></span></span>
<span class="line"><span>-- 创建 advertisements 表</span></span>
<span class="line"><span>DROP TABLE IF EXISTS advertisements;</span></span>
<span class="line"><span>CREATE TABLE advertisements (</span></span>
<span class="line"><span>    id INT PRIMARY KEY AUTO_INCREMENT,</span></span>
<span class="line"><span>    user_id INT NOT NULL,</span></span>
<span class="line"><span>    content TEXT NOT NULL,</span></span>
<span class="line"><span>    status ENUM(&#39;待审核&#39;, &#39;审核通过&#39;, &#39;审核失败&#39;) NOT NULL,</span></span>
<span class="line"><span>    submission_date DATE NOT NULL,</span></span>
<span class="line"><span>    scheduled_send_date DATE NOT NULL,</span></span>
<span class="line"><span>    FOREIGN KEY (user_id) REFERENCES users(id)</span></span>
<span class="line"><span>);</span></span>
<span class="line"><span></span></span>
<span class="line"><span>-- 创建 adrecords 表</span></span>
<span class="line"><span>DROP TABLE IF EXISTS adrecords;</span></span>
<span class="line"><span>CREATE TABLE adrecords (</span></span>
<span class="line"><span>    id INT PRIMARY KEY AUTO_INCREMENT,</span></span>
<span class="line"><span>    ad_id INT NOT NULL,</span></span>
<span class="line"><span>    send_date DATE NOT NULL,</span></span>
<span class="line"><span>    result ENUM(&#39;成功&#39;, &#39;失败&#39;) NOT NULL,</span></span>
<span class="line"><span>    FOREIGN KEY (ad_id) REFERENCES advertisements(id)</span></span>
<span class="line"><span>);</span></span>
<span class="line"><span></span></span>
<span class="line"><span>-- 创建 code_usage_records 表</span></span>
<span class="line"><span>DROP TABLE IF EXISTS code_usage_records;</span></span>
<span class="line"><span>CREATE TABLE code_usage_records (</span></span>
<span class="line"><span>    id INT PRIMARY KEY AUTO_INCREMENT,</span></span>
<span class="line"><span>    code_id INT NOT NULL,</span></span>
<span class="line"><span>    user_id INT NOT NULL,</span></span>
<span class="line"><span>    usage_date DATE NOT NULL,</span></span>
<span class="line"><span>    FOREIGN KEY (code_id) REFERENCES activation_codes(id),</span></span>
<span class="line"><span>    FOREIGN KEY (user_id) REFERENCES users(id)</span></span>
<span class="line"><span>);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="cloudflare-d1表设计" tabindex="-1"><a class="header-anchor" href="#cloudflare-d1表设计"><span>cloudflare d1表设计</span></a></h2><h3 id="用户表设计" tabindex="-1"><a class="header-anchor" href="#用户表设计"><span>用户表设计</span></a></h3><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>DROP TABLE IF EXISTS Customers;</span></span>
<span class="line"><span>CREATE TABLE IF NOT EXISTS Customers (CustomerId INTEGER PRIMARY KEY, CompanyName TEXT, ContactName TEXT);</span></span>
<span class="line"><span>INSERT INTO Customers (CustomerID, CompanyName, ContactName) VALUES (1, &#39;Alfreds Futterkiste&#39;, &#39;Maria Anders&#39;), (4, &#39;Around the Horn&#39;, &#39;Thomas Hardy&#39;), (11, &#39;Bs Beverages&#39;, &#39;Victoria Ashworth&#39;), (13, &#39;Bs Beverages&#39;, &#39;Random Name&#39;);</span></span>
<span class="line"><span></span></span>
<span class="line"><span>DROP TABLE IF EXISTS users;</span></span>
<span class="line"><span>CREATE TABLE users (</span></span>
<span class="line"><span>    id INTEGER PRIMARY KEY AUTOINCREMENT,</span></span>
<span class="line"><span>    nickname TEXT NOT NULL UNIQUE,</span></span>
<span class="line"><span>    phone TEXT NOT NULL UNIQUE,</span></span>
<span class="line"><span>    password TEXT NOT NULL,</span></span>
<span class="line"><span>    created_at DATE NOT NULL DEFAULT CURRENT_TIMESTAMP,</span></span>
<span class="line"><span>    updated_at DATE NOT NULL DEFAULT CURRENT_TIMESTAMP,</span></span>
<span class="line"><span>    Points INTEGER DEFAULT 0</span></span>
<span class="line"><span>);</span></span>
<span class="line"><span></span></span>
<span class="line"><span>DROP TABLE IF EXISTS activation_codes;</span></span>
<span class="line"><span>CREATE TABLE activation_codes (</span></span>
<span class="line"><span>    id INTEGER PRIMARY KEY AUTOINCREMENT,</span></span>
<span class="line"><span>    code TEXT NOT NULL UNIQUE,</span></span>
<span class="line"><span>    points INTEGER NOT NULL,</span></span>
<span class="line"><span>    is_active BOOLEAN NOT NULL DEFAULT TRUE,</span></span>
<span class="line"><span>    created_at DATE NOT NULL DEFAULT CURRENT_TIMESTAMP,</span></span>
<span class="line"><span>    updated_at DATE NOT NULL DEFAULT CURRENT_TIMESTAMP,</span></span>
<span class="line"><span>    expiration_date DATE NOT NULL</span></span>
<span class="line"><span>);</span></span>
<span class="line"><span></span></span>
<span class="line"><span>DROP TABLE IF EXISTS advertisements;</span></span>
<span class="line"><span>CREATE TABLE advertisements (</span></span>
<span class="line"><span>    id INTEGER PRIMARY KEY AUTOINCREMENT,</span></span>
<span class="line"><span>    user_id INTEGER NOT NULL,</span></span>
<span class="line"><span>    content TEXT NOT NULL,</span></span>
<span class="line"><span>    status TEXT CHECK(Status IN (&#39;待审核&#39;, &#39;审核通过&#39;, &#39;审核失败&#39;)) NOT NULL,</span></span>
<span class="line"><span>    submission_date DATE NOT NULL,</span></span>
<span class="line"><span>    scheduled_send_date DATE Not NULL,</span></span>
<span class="line"><span>    FOREIGN KEY (user_id) REFERENCES users(id)</span></span>
<span class="line"><span>);</span></span>
<span class="line"><span></span></span>
<span class="line"><span>DROP TABLE IF EXISTS adrecords;</span></span>
<span class="line"><span>CREATE TABLE adrecords (</span></span>
<span class="line"><span>    id INTEGER PRIMARY KEY AUTOINCREMENT,</span></span>
<span class="line"><span>    ad_id INTEGER NOT NULL,</span></span>
<span class="line"><span>    send_date DATE NOT NULL,</span></span>
<span class="line"><span>    result TEXT CHECK(Result IN (&#39;成功&#39;, &#39;失败&#39;)) NOT NULL,</span></span>
<span class="line"><span>    FOREIGN KEY (ad_id) REFERENCES advertisements(id)</span></span>
<span class="line"><span>);</span></span>
<span class="line"><span></span></span>
<span class="line"><span>DROP TABLE IF EXISTS code_usagere_cords;</span></span>
<span class="line"><span>CREATE TABLE code_usagere_cords (</span></span>
<span class="line"><span>    id INTEGER PRIMARY KEY AUTOINCREMENT,</span></span>
<span class="line"><span>    code_id INTEGER NOT NULL,</span></span>
<span class="line"><span>    user_id INTEGER NOT NULL,</span></span>
<span class="line"><span>    usage_date DATE NOT NULL,</span></span>
<span class="line"><span>    FOREIGN KEY (code_id) REFERENCES activation_codes(id),</span></span>
<span class="line"><span>    FOREIGN KEY (user_id) REFERENCES users(id)</span></span>
<span class="line"><span>);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="创建表" tabindex="-1"><a class="header-anchor" href="#创建表"><span>创建表</span></a></h3><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>npx wrangler d1 execute advcamsx --local --file=./schema.sql</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="查询user表" tabindex="-1"><a class="header-anchor" href="#查询user表"><span>查询user表</span></a></h3><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>npx wrangler d1 execute advcamsx --local --command=&quot;SELECT * FROM users&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>`,12),p=[l];function d(c,r){return a(),n("div",null,p)}const u=s(i,[["render",d],["__file","nuxtquanzhan.html.vue"]]),m=JSON.parse('{"path":"/posts/nuxtquanzhan.html","title":"nuxt全栈教程","lang":"zh-CN","frontmatter":{"date":"2024-07-21T00:00:00.000Z","category":["教程"],"tag":["nuxt,全栈"],"archive":false,"description":"nuxt全栈教程 利用mysql安装docker mysql 表设计 cloudflare d1表设计 用户表设计 创建表 查询user表","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/wangyiheng-blog/posts/nuxtquanzhan.html"}],["meta",{"property":"og:site_name","content":"博客演示"}],["meta",{"property":"og:title","content":"nuxt全栈教程"}],["meta",{"property":"og:description","content":"nuxt全栈教程 利用mysql安装docker mysql 表设计 cloudflare d1表设计 用户表设计 创建表 查询user表"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-08-05T15:52:14.000Z"}],["meta",{"property":"article:author","content":"DG"}],["meta",{"property":"article:tag","content":"nuxt,全栈"}],["meta",{"property":"article:published_time","content":"2024-07-21T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-08-05T15:52:14.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"nuxt全栈教程\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-07-21T00:00:00.000Z\\",\\"dateModified\\":\\"2024-08-05T15:52:14.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"DG\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":3,"title":"利用mysql安装docker","slug":"利用mysql安装docker","link":"#利用mysql安装docker","children":[]},{"level":3,"title":"mysql 表设计","slug":"mysql-表设计","link":"#mysql-表设计","children":[]},{"level":2,"title":"cloudflare d1表设计","slug":"cloudflare-d1表设计","link":"#cloudflare-d1表设计","children":[{"level":3,"title":"用户表设计","slug":"用户表设计","link":"#用户表设计","children":[]},{"level":3,"title":"创建表","slug":"创建表","link":"#创建表","children":[]},{"level":3,"title":"查询user表","slug":"查询user表","link":"#查询user表","children":[]}]}],"git":{"createdTime":1722873134000,"updatedTime":1722873134000,"contributors":[{"name":"iiheng","email":"1269305589@qq.com","commits":1}]},"readingTime":{"minutes":2.19,"words":657},"filePathRelative":"posts/nuxtquanzhan.md","localizedDate":"2024年7月21日","excerpt":"\\n<h3>利用mysql安装docker</h3>\\n<div class=\\"language- line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"\\" data-title=\\"\\" style=\\"--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes github-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span> docker run -d -p 3306:3306 --name mysql -e MYSQL_ROOT_PASSWORD=123456 -v ${PWD}/db:/var/lib/mysql --restart always mysql:8.2</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{u as comp,m as data};
